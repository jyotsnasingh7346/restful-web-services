# server.contextPath=/users
################################################################

logging.level.org.springframework = info

################################################################

# below line is for all (*) monitoring links by actuator on = http://localhost:8080/actuator 
management.endpoints.web.exposure.include = *

################################################################
# Below lines are for JPA

# 1. JPA - below line will show all the queries being executed via jpa, in the logs, starting with Hibernate:
spring.jpa.show-sql=true

# 2. JPA - below line will enable us with a h2 in memory db which is accessible at http://localhost:8080/h2-console
spring.h2.console.enabled=true

# 3. JPA - below line will help us configure a static url for dynamically changing db
# since we want to connect to mysql database now instead of h2, 
# lets comment this below line and connect to mysql below 
# spring.datasource.url=jdbc:h2:mem:testdb

# 4. JPA - below line will help you delay the data insertion, before data source is created.
spring.jpa.defer-datasource-initialization=true

# 5. This ensures that at the startup of the application, based on the entities that are present, 
# the db schema will be updated.
spring.jpa.hibernate.ddl-auto=update

# 6. We also want to configure the dialect we want to use.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

################################################################
# Below lines are for connecting to mySQL DB instead of h2.

# Command for downloading mysql:8-oracle image in docker container below. Run it in the terminal.
# docker run --detach
# --env MYSQL_ROOT_PASSWORD=dummypassword
# --env MYSQL_USER=social-media-user
# --env MYSQL_PASSWORD=dummypassword
# --env MYSQL_DATABASE=social-media-database
# --name mysql
# --publish 3306:3306
# mysql:8-oracle

# Commands for connecting to our msql db
# \connect social-media-user@localhost:3306
# \use social-media-database
# \sql
# select * from user_details;
# select * from post;

# schema? DBName -> social-media-database

spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.generate-ddl=true

##################################################################
################# SPRING SECURITY PROPERTIES BELOW ###############

spring.security.user.name=username
spring.security.user.password=password

##################################################################
